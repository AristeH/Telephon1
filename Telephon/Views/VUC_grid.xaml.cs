using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Markup;
using Telephon.Models;
using static Telephon.Models.grid;
using static Telephon.Models.shapka;

namespace Telephon.Views
{
    /// <summary>
    /// Логика взаимодействия для VUC_grid.xaml
    /// </summary>
    public partial class VUC_grid : UserControl
    {
        public VUC_grid()
        {
            InitializeComponent();
        }

        private DataTemplate CreateTemplate(String xamlTemplate)
        {
            var context = new ParserContext();
            context.XamlTypeMapper = new XamlTypeMapper(new string[0]);
            context.XmlnsDictionary.Add("", "http://schemas.microsoft.com/winfx/2006/xaml/presentation");
            context.XmlnsDictionary.Add("x", "http://schemas.microsoft.com/winfx/2006/xaml");
            var template = (DataTemplate)XamlReader.Parse(xamlTemplate, context);
            return template;
        }
        private void vucGrid_AutoGeneratedColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (this.Parent == null)
                return;

            foreach (FieldSection stroca in ((grid)(this.DataContext)).Columns)
            {
                if (e.PropertyName == stroca.name)
                {
                    switch (stroca.tip)
                    {
                        case "string":
                            string template = "<DataTemplate>";
                            template += "<StackPanel Orientation = 'Horizontal'>";
                            template += "<TextBox>";
                            template += "<TextBox.Text>";
                            template += "<Binding Path='" + e.PropertyName + "' Mode='TwoWay' UpdateSourceTrigger='PropertyChanged'></Binding>";
                            template += "</TextBox.Text></TextBox>";
                            template += "<Button Content='{Binding " + e.PropertyName + "}'/>";
                            template += "</StackPanel></DataTemplate>";
                            e.Column = new DataGridTemplateColumn() { CellTemplate = CreateTemplate(template) };
                            e.Column.Header = stroca.value;
                            break;
                        case "time.Time":
                            string templated = "<DataTemplate>";
                            templated += "<DatePicker SelectedDate='{Binding Path=" + e.PropertyName + ", Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}'/>";
                            templated += "</DataTemplate>";
                            e.Column = new DataGridTemplateColumn() { CellTemplate = CreateTemplate(templated) };
                            e.Column.Header = stroca.value;
                            break;
                    }
                }

            }
        }
    }
}
